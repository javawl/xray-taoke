package com.xray.taoke.admin.web.controller;

import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.htmlcleaner.HtmlCleaner;
import org.htmlcleaner.TagNode;
import org.htmlcleaner.XPatherException;

import com.jfinal.aop.Clear;
import com.jfinal.aop.Enhancer;
import com.jfinal.ext.route.ControllerBind;
import com.jfinal.weixin.sdk.api.ApiResult;
import com.xray.act.util.DateUtil;
import com.xray.act.web.vo.RtnFactory;
import com.xray.admin.web.controller.AbstractController;
import com.xray.taoke.admin.app.CashAutoApp;
import com.xray.taoke.admin.app.CashRemindApp;
import com.xray.taoke.admin.app.HaodankuApp;
import com.xray.taoke.admin.app.InvalidOrderApp;
import com.xray.taoke.admin.app.LinkItemApp;
import com.xray.taoke.admin.app.LinkWareApp;
import com.xray.taoke.admin.app.NewCashRemindApp;
import com.xray.taoke.admin.app.NotActiveRemindApp;
import com.xray.taoke.admin.app.NotConfirmActiveRemindApp;
import com.xray.taoke.admin.app.OrderJieApp;
import com.xray.taoke.admin.app.OrderNewApp;
import com.xray.taoke.admin.app.OrderNewStateApp;
import com.xray.taoke.admin.app.OrderPidexApp;
import com.xray.taoke.admin.app.OrderProxyApp;
import com.xray.taoke.admin.app.OrderStateApp;
import com.xray.taoke.admin.app.RemindNotActiveApp;
import com.xray.taoke.admin.app.SendJxApp;
import com.xray.taoke.admin.app.SendMjApp;
import com.xray.taoke.admin.app.TkStatDetailApp;
import com.xray.taoke.admin.app.UserInfoApp;
import com.xray.taoke.admin.app.jd.JdItemApp;
import com.xray.taoke.admin.app.jd.JdOrderNewApp;
import com.xray.taoke.admin.app.jd.JdOrderNewStateApp;
import com.xray.taoke.admin.common.DateUtilMyself;
import com.xray.taoke.admin.model.Cashinfo;
import com.xray.taoke.admin.model.MpInfo;
import com.xray.taoke.admin.model.TkLyInfo;
import com.xray.taoke.admin.service.MpInfoService;
import com.xray.taoke.admin.service.WeixinApi;
import com.xray.taoke.admin.utils.HttpUtils;
import com.xray.taoke.admin.utils.ParamUtils;
import com.xray.taoke.admin.utils.WxTmplmsgNewUtil;

@Clear
@ControllerBind(controllerKey = "/app")
public class AppController extends AbstractController {

	public void doLinkWareApp() {
		new LinkWareApp().start();
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 好单库榜单更新
	 */
	public void doHaodankuApp() {
		new HaodankuApp().start();
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 用户信息更新
	 */
	public void doUserInfoApp() {
		List<String> list = MpInfo.dao.queryAppidAllLine();
		for (String appid : list) {
			UserInfoApp app = new UserInfoApp(appid);
			app.doRun(appid);
			app.doUoUserInfo(appid);
		}
		UserInfoApp.doCashUserInfo();
		UserInfoApp.doOrderUserInfo();
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 新订单同步
	 */
	public void doOrderNewApp() {
		List<MpInfo> list = filterByTbname(MpInfo.dao.queryTbnameInuse());
		for (MpInfo data : list) {
			new OrderNewApp(data.getStr("appid")).start();
		}
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 订单状态同步
	 */
	public void doOrderStateApp() {
		List<MpInfo> list = filterByTbname(MpInfo.dao.queryTbnameInuse());
		for (MpInfo data : list) {
			new OrderNewStateApp(data.getStr("appid")).start();
		}
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 根据日期更新订单状态
	 */
	public void doOrderStateByDay() {
		String day = getPara("day", DateUtil.getToday());
		long begintime = 0;
		long endtime = 0;
		begintime = DateUtilMyself.getTimesmorning(day);
		endtime = DateUtilMyself.getTimesnight(day);
		List<MpInfo> list = filterByTbname(MpInfo.dao.queryTbnameInuse());
		for (MpInfo data : list) {
			new OrderStateApp(data.getStr("appid"), begintime, endtime).start();
		}
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 订单结算
	 */
	public void doOrderJieApp() {
		new OrderJieApp().start();
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 自动绑定订单脚本
	 */
	public void doOrderPidexApp() {
		new OrderPidexApp().start();
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 代理订单绑定
	 */
	public void doOrderProxyApp() {
		new OrderProxyApp().start();
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 自动提现脚本
	 */
	public void doCashAutoApp() {
		List<String> list = MpInfo.dao.queryAppidInuse();
		for (String appid : list) {
			new CashAutoApp(appid).start();
		}
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 提现提示脚本
	 */
	public void doCashRemindApp() {
		List<String> list = MpInfo.dao.queryAppidInuse();
		for (String appid : list) {
			new CashRemindApp(appid).start();
		}
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 发送秘笈
	 */
	public void doSendMjApp() {
		// List<String> list = MpInfo.dao.queryAppidInuse();
		List<String> list = MpInfo.dao.queryAppidAllLine();
		for (String appid : list) {
			new SendMjApp(appid, getParaToInt("delay", 1800000)).start();
		}
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 发送精选
	 */
	public void doSendJxApp() {
		// List<String> list = MpInfo.dao.queryAppidInuse();
		List<String> list = MpInfo.dao.queryAppidAllLine();
		String timekey = getPara("timekey", "");
		for (String appid : list) {
			new SendJxApp(appid, timekey).start();
		}

		renderRtn(RtnFactory.succ);
	}

	/**
	 * 日数据汇总
	 */
	public void doTkStatDetailEx() {
		String day = getPara("day", DateUtil.getToday());
		TkStatDetailApp app = new TkStatDetailApp(day);
		app.run();
		renderRtn(RtnFactory.succ);
	}

	public void doCreateQ() {
		// 场景值
		String sceneId = "string";
		String appid = "wx3088f1bd705dfd20";
		// 生成临时二维码
		WeixinApi wxApi = Enhancer.enhance(WeixinApi.class);
		String str = wxApi.CreateQrcode(appid, sceneId);
		renderRtn(RtnFactory.newSucc(str));
	}

	public void doRemindCash() {
		List<Cashinfo> list = Cashinfo.dao.queryPepCash();
		new NewCashRemindApp(list).start();
		renderRtn(RtnFactory.succ);
	}

	private List<MpInfo> filterByTbname(List<MpInfo> list) {
		Set<String> set = new HashSet<String>();
		List<MpInfo> result = new ArrayList<MpInfo>();
		for (MpInfo data : list) {
			if (set.contains(data.getStr("tbname")))
				continue;
			result.add(data);
			set.add(data.getStr("tbname"));
		}
		return result;
	}

	public void doInvaidOrder() {

		List<String> list = MpInfo.dao.queryAppidInuse();
		for (String appid : list) {
			new InvalidOrderApp(appid).start();
		}
		renderRtn(RtnFactory.succ);
	}

	public void doRemindNotActive() {
		List<MpInfo> list = MpInfo.dao.queryByInuse();
		String appid = null;
		String templateid = null;
		for (MpInfo data : list) {
			appid = data.getStr("appid");
			templateid = data.getStr("templateid");
			new RemindNotActiveApp(appid, templateid).start();
		}
	}

	/**
	 * 新京東订单
	 */
	public void doJdOrderNewApp() {
		List<MpInfo> list = filterByTbname(MpInfo.dao.queryTbnameInuse());
		for (MpInfo data : list) {
			new JdOrderNewApp(data.getStr("appid")).start();
		}
		renderRtn(RtnFactory.succ);
	}

	/**
	 * 京東榜单更新
	 */
	public void doJdItemApp() {
		new JdItemApp().start();
		renderRtn(RtnFactory.succ);
	}

	public void doJdStateApp() {
		List<MpInfo> list = filterByTbname(MpInfo.dao.queryTbnameInuse());
		for (MpInfo data : list) {
			new JdOrderNewStateApp(data.getStr("appid")).start();
		}
		renderRtn(RtnFactory.succ);
	}

	public void doListItemApp() {
		LinkItemApp app = new LinkItemApp();
		app.run();
		renderRtn(RtnFactory.succ);
	}

	public void doNotActiveRemindApp() {

		List<String> list = MpInfo.dao.queryAppidInuse();
		for (String appid : list) {
			new NotActiveRemindApp(appid).start();
		}
		renderRtn(RtnFactory.succ);
	}

	public void doNotConfirmActiveRemindApp() {

		List<String> list = MpInfo.dao.queryAppidInuse();
		for (String appid : list) {
			new NotConfirmActiveRemindApp(appid).start();
		}

		renderRtn(RtnFactory.succ);
	}


	public void doSendByTest() {
		String appid = "wx8dd7601283019269";
		String openid = "oiDxG5y8BI6QhWmk9GIPfvEXbbfE";
		String template_id = MpInfoService.instance.getMpInfo(appid).get("templateid");
		// long sys_time = System.currentTimeMillis();
		// MpUser mpUser = MpUser.dao.queryByUserid(appid, userid);
		// if (mpUser == null)
		// return;
		// String name = mpUser.getWxnameUTF8();
		//
		// double val = MpInfoService.instance.getActiveByOpenid(appid, openid);
		//
		// BigDecimal bg = new BigDecimal(val + "");
		// // 活跃的过滤
		// if ((sys_time - 172800000) < bg.longValue())
		// return;
		// // 今日已发过结算通知,不再发
		// Double value = MpUserService.instance.getDoubleByUserid(userid);
		// bg = new BigDecimal(value + "");
		//
		// long todayBegin = getTodayBegin();
		//
		// if (bg.longValue() > todayBegin)
		// return;
		//
		// // 48小时只能发一次
		// value = MpUserService.instance.getDoubleTwoDayByUserid(userid);
		//
		// bg = new BigDecimal(value + "");
		// if ((sys_time - 172800000) < bg.longValue())
		// return;
		//
		// if (StringUtil.isEmpty(template_id)) {
		// logger.error("runapp,NotActiveRemindApp,no this template_id,appid:{}",
		// appid);
		// return;
		// }
		ApiResult apiResult = null;
		apiResult = WxTmplmsgNewUtil.sendCanCashTMG(appid, openid, template_id, 0.0);
		if (apiResult.getErrorCode() != 0) {
			logger.info("runapp,NotActiveRemindApp,sendTMG,appid:{},openid:{},msg:{}", appid, openid,
					apiResult.getErrorMsg());
			return;
		}

		apiResult = WxTmplmsgNewUtil.sendConfirmTMG(appid, openid, template_id, 0.0);
		if (apiResult.getErrorCode() != 0) {
			logger.info("runapp,NotActiveRemindApp,sendTMG,appid:{},openid:{},msg:{}", appid, openid,
					apiResult.getErrorMsg());
			return;
		}

		// MpUserService.instance.addUseridByTwoDays(userid);

		renderRtn(RtnFactory.succ);
	}

}
