package com.xray.taoke.admin.app;

import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;

import com.xray.act.util.DateUtil;
import com.xray.act.util.StringUtil;
import com.xray.taoke.admin.model.MpUser;
import com.xray.taoke.admin.model.OrderInfo;
import com.xray.taoke.admin.model.TkStatDetail;
import com.xray.taoke.admin.service.MpInfoService;

import redis.clients.jedis.Jedis;
import redis.clients.jedis.Pipeline;
import redis.clients.jedis.Response;

public class TkStatDetailApp extends AbstractApp {
    private String appid;
    private String day;

    public TkStatDetailApp(String appid, String day) {
        this.appid = appid;
        this.day = day;
    }

    @Override
    public void run() {
        try {
            doRun(appid, day);
        } catch (Exception e) {
            logger.error("errapp,stat detail,appid:" + appid, e);
        }
    }

    public static void doRun(String appid, String day) {
        runStatByDay(appid, day);
        doCountUser(appid, day);
        doCountOrder(appid, day);
    }

    public static void runStatByDay(String appid, String day) {
        // 历史数据不能改
        if (!DateUtil.getToday().equals(day))
            return;

        Calendar cal = Calendar.getInstance();
        cal.setTime(DateUtil.getDate(day, "yyyy-MM-dd"));
        long begintime = cal.getTimeInMillis();
        cal.add(Calendar.DAY_OF_MONTH, 1);
        long endtime = cal.getTimeInMillis();

        String key = MpInfoService.instance.getStatKey(appid, "userall", day);
        cache.set(key, String.valueOf(MpUser.dao.countUserall(appid, endtime)));

        key = MpInfoService.instance.getStatKey(appid, "usernew", day);
        cache.set(key, String.valueOf(MpUser.dao.countUsernew(appid, begintime, endtime)));

        key = MpInfoService.instance.getStatKey(appid, "activeuv", day);
        cache.set(key, String.valueOf(MpInfoService.instance.getActiveSize(appid)));
    }

    public static void doCountUser(String appid, String day) {
        String sid = MpInfoService.instance.getSid(appid);
        TkStatDetail data = TkStatDetail.dao.queryByAppid(day, appid);
        if (data == null) {
            data = new TkStatDetail();
            data.set("day", day);
            data.set("appid", appid);
            setUserData(data, sid);
            data.save();
        } else {
            setUserData(data, sid);
            data.update();
        }
        logger.info("runapp,stat doCountUser,appid:{},day:{}", appid, day);
    }

    private static void doCountOrder(String appid, String day) {
        TkStatDetail data = TkStatDetail.dao.queryByAppid(day, appid);

        Calendar cal = Calendar.getInstance();
        cal.setTime(DateUtil.getDate(day, "yyyy-MM-dd"));
        long begintime = cal.getTimeInMillis();
        cal.add(Calendar.DAY_OF_MONTH, 1);
        long endtime = cal.getTimeInMillis();

        OrderInfo newOrder = OrderInfo.dao.countNewOrder(appid, begintime, endtime);
        if (newOrder.getInt("ordernew") > 0) {
            data.set("ordernew", newOrder.getInt("ordernew"));
            data.set("newprice", newOrder.getDouble("newprice"));
            data.set("newmoney", newOrder.getDouble("newmoney"));
            data.set("newmoneyrate", newOrder.getDouble("newmoneyrate"));
            data.set("newjie", newOrder.getDouble("newjie"));
        }

        OrderInfo jieOrder = OrderInfo.dao.countJieOrder(appid, begintime, endtime);
        if (jieOrder.getInt("orderjie") > 0) {
            data.set("orderjie", jieOrder.getInt("orderjie"));
            data.set("jiemoney", jieOrder.getDouble("jiemoney"));
        }

        if (data.getDouble("newprice") > 0)
            data.set("newmoneyrate", data.getDouble("newmoney") / data.getDouble("newprice"));

        double money = data.getDouble("newmoney");
        if (money > 0)
            data.set("newjierate", data.getDouble("newjie") / money);

        if (data.getInt("userall") > 0)
            data.set("arpu", data.getDouble("newmoney") / data.getInt("userall"));

        data.update();
        logger.info("runapp,stat doCountOrder,appid:{},day:{}", appid, day);
    }

    private static void setUserData(TkStatDetail data, String sid) {
        Jedis jedis = cache.getJedisClient();
        try {
            String appid = data.getStr("appid");
            String day = data.getStr("day");

            Map<String, Response<String>> resp = new HashMap<String, Response<String>>();
            Pipeline p = jedis.pipelined();
            resp.put("userall", p.get(MpInfoService.instance.getStatKey(appid, "userall", day)));
            resp.put("usernew", p.get(MpInfoService.instance.getStatKey(appid, "usernew", day)));
            resp.put("activeuv", p.get(MpInfoService.instance.getStatKey(appid, "activeuv", day)));
            resp.put("chaquanpv", p.get(MpInfoService.instance.getStatKey(appid, "chaquan", day)));

            resp.put("tsoupv", p.get(MpInfoService.instance.getStatKey(sid, "tsou", day)));
            resp.put("titempv", p.get(MpInfoService.instance.getStatKey(sid, "titem", day)));
            resp.put("tshoppv", p.get(MpInfoService.instance.getStatKey(sid, "tshop", day)));
            resp.put("tlinkpv", p.get(MpInfoService.instance.getStatKey(sid, "tlink", day)));
            p.sync();

            setVal(data, "userall", resp);
            setVal(data, "usernew", resp);
            setVal(data, "activeuv", resp);
            setVal(data, "chaquanpv", resp);
            setVal(data, "tsoupv", resp);
            setVal(data, "titempv", resp);
            setVal(data, "tshoppv", resp);
            setVal(data, "tlinkpv", resp);

            if (data.getInt("userall") != null && data.getInt("userall") > 0)
                data.set("activerate", 1.0 * data.getInt("activeuv") / data.getInt("userall"));
        } finally {
            cache.returnResource(jedis);
        }
    }

    private static void setVal(TkStatDetail data, String key, Map<String, Response<String>> resp) {
        String val = resp.get(key).get();
        if (StringUtil.isNotEmpty(val))
            data.set(key, Integer.valueOf(val));
    }

    // public static void fix() {
    // String appid = "wx8dd7601283019269";
    //
    // String day = "2019-04-11";
    // String key = MpInfoService.instance.getStatKey(appid, "userall", day);
    // cache.set(key, "96");
    // key = MpInfoService.instance.getStatKey(appid, "usernew", day);
    // cache.set(key, "81");
    // key = MpInfoService.instance.getStatKey(appid, "activeuv", day);
    // cache.set(key, "96");
    //
    // day = "2019-04-12";
    // key = MpInfoService.instance.getStatKey(appid, "userall", day);
    // cache.set(key, "108");
    // key = MpInfoService.instance.getStatKey(appid, "usernew", day);
    // cache.set(key, "13");
    // key = MpInfoService.instance.getStatKey(appid, "activeuv", day);
    // cache.set(key, "101");
    // }

}
