package com.xray.taoke.act.service;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.http.client.fluent.Request;

import com.alibaba.fastjson.JSONObject;
import com.jfinal.kit.Prop;
import com.jfinal.kit.PropKit;
import com.xray.act.exception.RtException;
import com.xray.act.util.codec.URLCodec;
import com.xray.taoke.act.common.Constant;

public class Tk21dsService {
    private static final Prop config = PropKit.use("config.properties");
    private static String iteminfo = "https://api.open.21ds.cn/apiv1/getiteminfo?apkey=" + config.get("tbapi.21ds.apkey");
    private static String itemgy = "https://api.open.21ds.cn/apiv1/getitemgyurl?apkey=" + config.get("tbapi.21ds.apkey");
    private static String tkorder = "https://api.open.21ds.cn/apiv1/gettkorder?apkey=" + config.get("tbapi.21ds.apkey");
    private static Pattern p_itemid = Pattern.compile("&id=(\\d+)");
    private static Pattern p_extraData = Pattern.compile("var extraData = (\\{.+\\});");

    public static Tk21dsService instance = new Tk21dsService();

    public static void main(String[] args) throws Exception {
        // System.out.println(Tk21dsService.instance.getiteminfo("586994766563").toJSONString());
        // System.out.println(Tk21dsService.instance.getitemgyurl("588820187070").toJSONString());
        // System.out.println(Tk21dsService.instance.gettkorder("2019-03-22
        // 13:40:00").toJSONString());
        // https://m.tb.cn/h.3yTe6lf
        // https://m.tb.cn/h.3yim2bf?sm=54d2c3
        // https://m.tb.cn/h.3B43F8N?sm=f3df9e
        System.out.println(Tk21dsService.instance.getiteminfoByHtml("https://m.tb.cn/h.3B43F8N?sm=f3df9e"));
    }

    public JSONObject getiteminfoByHtml(String url) throws Exception {
        String text = Request.Get(url).execute().returnContent().asString();
        Matcher m = p_extraData.matcher(text);
        if (!m.find())
            throw new RtException(Constant.data_err, "err parse getiteminfoByHtml,none extraData");
        JSONObject obj = JSONObject.parseObject(m.group(1));

        m = p_itemid.matcher(text);
        if (!m.find())
            throw new RtException(Constant.data_err, "err parse getiteminfoByHtml,none itemid");
        obj.put("itemid", m.group(1));

        String pic = obj.getString("pic");
        if (pic.indexOf("430x430") <= 0)
            obj.put("pic", pic + "_430x430q90.jpg");
        return obj;
    }

    public JSONObject getiteminfo(String itemid) throws Exception {
        StringBuilder sb = new StringBuilder(iteminfo);
        sb.append("&itemid=").append(itemid);
        return JSONObject.parseObject(Request.Get(sb.toString()).execute().returnContent().asString());
    }

    public JSONObject getitemgyurl(String itemid) throws Exception {
        StringBuilder sb = new StringBuilder(itemgy);
        sb.append("&itemid=").append(itemid);
        sb.append("&pid=").append(config.get("tbapi.21ds.pid"));
        sb.append("&tbname=").append(config.get("tbapi.21ds.tbname"));
        sb.append("&tpwd=").append(1);
        return JSONObject.parseObject(Request.Get(sb.toString()).execute().returnContent().asString());
    }

    public JSONObject gettkorder(String starttime) throws Exception {
        StringBuilder sb = new StringBuilder(tkorder);
        sb.append("&starttime=").append(URLCodec.encode(starttime, "UTF-8"));
        sb.append("&span=").append(1200);
        sb.append("&page=").append(1);
        sb.append("&pagesize=").append(100);
        sb.append("&tkstatus=").append(1);
        sb.append("&ordertype=").append("create_time");
        sb.append("&tbname=").append(config.get("tbapi.21ds.tbname"));
        return JSONObject.parseObject(Request.Get(sb.toString()).execute().returnContent().asString());
    }

}
