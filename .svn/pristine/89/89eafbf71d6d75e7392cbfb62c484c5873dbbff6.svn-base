package com.xray.taoke.admin.service;

import java.io.File;
import java.util.Map;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.jfinal.aop.Before;
import com.jfinal.kit.PathKit;
import com.jfinal.weixin.sdk.api.ApiConfig;
import com.jfinal.weixin.sdk.api.ApiConfigKit;
import com.jfinal.weixin.sdk.api.ApiResult;
import com.jfinal.weixin.sdk.api.MediaApi;
import com.jfinal.weixin.sdk.api.MediaApi.MediaType;
import com.jfinal.weixin.sdk.api.MenuApi;
import com.xray.act.jfinal.weixin.ApiInterceptor;
import com.xray.act.jfinal.weixin.ApiProvider;
import com.xray.act.service.AbstractService;

public class WeixinApi extends AbstractService implements ApiProvider {
    public static final String webroot_path = PathKit.getWebRootPath().replaceAll("\\\\", "/");

    @Override
    public ApiConfig getApiConfig(String appid) {
        Map<String, String> cond = MpInfoService.instance.getMpInfo(appid);
        ApiConfig ac = new ApiConfig();
        ac.setAppId(appid);
        ac.setAppSecret(cond.get("appsecret"));
        ac.setToken(cond.get("token"));
        ac.setEncodingAesKey(cond.get("encodingaeskey"));
        ApiConfigKit.putApiConfig(ac);
        ApiConfigKit.setThreadLocalAppId(appid);
        return ac;
    }

    @Before(ApiInterceptor.class)
    public ApiResult geteMenu(String appid) {
        ApiResult res = MenuApi.getMenu();
        return res;
    }

    private JSONObject processMenu(JSONObject src, boolean isMuitl) {
        JSONObject obj = new JSONObject();
        obj.put("name", src.getString("name"));
        if (isMuitl)
            return obj;

        obj.put("type", src.getString("type"));
        if ("click".equals(src.getString("type"))) {
            obj.put("key", src.getString("content"));
        } else if ("view".equals(src.getString("type"))) {
            obj.put("url", src.getString("content"));
        }
        return obj;
    }

    @Before(ApiInterceptor.class)
    public ApiResult createMenu(String appid, String content) {
        JSONArray src = JSONObject.parseArray(content);

        JSONArray butArr = new JSONArray();
        for (int i = 0; i < src.size(); i++) {
            JSONObject obj = src.getJSONObject(i);
            JSONArray arr = obj.getJSONArray("subList");

            if (arr.size() <= 0) {
                butArr.add(processMenu(obj, false));
                continue;
            }

            JSONArray subArr = new JSONArray();
            for (int j = 0; j < arr.size(); j++) {
                subArr.add(processMenu(arr.getJSONObject(i), false));
            }
            JSONObject but = processMenu(obj, true);
            but.put("sub_button", subArr);
            butArr.add(but);
        }

        JSONObject butObj = new JSONObject();
        butObj.put("button", butArr);

        ApiResult res = MenuApi.createMenu(butObj.toJSONString());
        if (!res.isSucceed()) {
            logger.error("err createMenu,appid:{},code:{},msg:{}", appid, res.getErrorCode(), res.getErrorMsg());
        } else {
            logger.info("createMenu,appid:{}", appid);
        }
        return res;
    }

    @Before(ApiInterceptor.class)
    public ApiResult addMaterial(String appid, JSONObject obj) {
        File file = new File(webroot_path + obj.getString("content"));
        ApiResult res = MediaApi.addMaterial(file, MediaType.IMAGE);
        System.out.println(res);
        return res;
    }

}
