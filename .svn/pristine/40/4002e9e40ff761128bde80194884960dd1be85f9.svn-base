package com.xray.taoke.admin.web.controller;

import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Map;

import com.jfinal.ext.route.ControllerBind;
import com.xray.act.util.StringUtil;
import com.xray.act.util.UuidUtil;
import com.xray.act.web.vo.PageVo;
import com.xray.act.web.vo.RtnFactory;
import com.xray.admin.web.controller.AbstractController;
import com.xray.taoke.admin.model.TkCashinfo;
import com.xray.taoke.admin.model.TkMpinfo;
import com.xray.taoke.admin.model.TkOrderInfo;
import com.xray.taoke.admin.service.MpInfoService;
import com.xray.taoke.admin.vo.TkCashinfoVo;

@ControllerBind(controllerKey = "/tkcashinfo")
public class TkCashinfoController extends AbstractController {
    public final static SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");

    public void goList() {
        Map<String, Object> cond = getCondAll();
        String appid = getPara("appid", "");
        if (StringUtil.isEmpty(appid)) {
            getCond(cond, "appid", appid);
        }
        setAttr("appid", appid);

        setAttr("mpList", TkMpinfo.dao.queryAllInuse());

        PageVo page = new PageVo(getParaToInt("pno", 1));
        page.setOrderby("`seqid` desc");
        setAttr("page", page);
        List<TkCashinfo> dataList = TkCashinfo.dao.queryList(cond, page);
        for (TkCashinfo tkCashinfo : dataList) {
            Map<String, String> cond2 = MpInfoService.instance.getMpNames();
            if (StringUtil.isNotEmpty(cond2.get(tkCashinfo.getStr("appid"))))
                tkCashinfo.setName(cond2.get(tkCashinfo.getStr("appid")));
            else
                tkCashinfo.setName("");

        }
        setAttr("dataList", dataList);
        logger.debug("dataList,size:{}", dataList.size());
        render("/template/pages/tk_cashinfo/list.html");
    }

    public void goAdd() {
        render("/template/pages/tk_cashinfo/form.html");
    }

    public void goEdit() {
        String seqid = getPara("seqid");
        TkOrderInfo data = TkOrderInfo.dao.findById(seqid);
        setAttr("data", data);
        render("/template/pages/tk_cashinfo/form.html");
    }

    public void goListByUserId() {
        Map<String, Object> cond = getCondAll();

        PageVo page = new PageVo(getParaToInt("pno", 1));
        page.setOrderby("`seqid` desc");
        setAttr("page", page);
        String appid = (String) cond.get("appid");
        setAttr("mpList", TkMpinfo.dao.queryAllInuse());
        List<TkCashinfoVo> dataList = TkCashinfo.dao.listVo(TkCashinfo.dao.queryList(cond, page), TkCashinfoVo.class);
        for (TkCashinfoVo tkCashinfo : dataList) {
            Map<String, String> cond2 = MpInfoService.instance.getMpNames();
            System.out.println(cond2);
            if (StringUtil.isNotEmpty(cond2.get(appid)))
                tkCashinfo.setName(cond2.get(appid));
            else
                tkCashinfo.setName("");
        }

        setAttr("dataList", dataList);
        logger.debug("dataList,size:{}", dataList.size());
        render("/template/pages/tk_cashinfo/list_userid.html");
    }

    public void doAdd() {
        TkOrderInfo data = new TkOrderInfo();
        String content = getPara("content");
        String menuid = "wx_" + UuidUtil.getUuidByJdk(true).substring(8, 24);
        data.set("menuid", menuid);
        data.set("name", getPara("name"));
        data.set("content", content);
        data.set("state", 1);
        data.set("inputtime", System.currentTimeMillis());
        data.set("inputby", getUserid());
        data.set("edittime", data.get("inputtime"));
        data.set("editby", data.get("inputby"));
        data.save();

        logger.info("doAdd,menuid:{},opid:{},{}", menuid, getUserid(), getRemoteIp());
        renderRtn(RtnFactory.succ);
    }

    public void doEdit() {
        String seqid = getPara("seqid");
        TkOrderInfo data = TkOrderInfo.dao.findById(seqid);
        data.set("name", getPara("name"));
        data.set("content", getPara("content"));
        data.set("edittime", System.currentTimeMillis());
        data.set("editby", getUserid());
        data.update();
        logger.info("doEdit,opid:{},{}", getUserid(), getRemoteIp());
        renderRtn(RtnFactory.succ);
    }

    public void doDel() {

        String seqid = getPara("seqid");
        TkOrderInfo.dao.deleteById(seqid);
        // TkOrderInfo orderInfo = TkOrderInfo.dao.findById(seqid);
        // orderInfo.set("", value);
        // orderInfo.update();
        logger.info("doDels,seqids:{},opid:{},{}", seqid, getUserid(), getRemoteIp());

        renderRtn(RtnFactory.succ);
    }

    public void doCopyByAppid() {
        String appid = getPara("appid");
        String userid = getPara("userid");
        TkCashinfo tkCashinfo = TkCashinfo.dao.queryByUserId(userid);
        TkMpinfo mpinfo = TkMpinfo.dao.queryByUserid(appid, userid);
        String name = mpinfo.getName1();
        String avatar = mpinfo.getStr("avatar");
        tkCashinfo.set("username", name);
        tkCashinfo.set("avatar", avatar);
        tkCashinfo.update();
        renderRtn(RtnFactory.succ);
    }

}
