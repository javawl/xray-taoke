package com.xray.taoke.admin.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.jfinal.ext.plugin.tablebind.TableBind;
import com.jfinal.plugin.activerecord.Db;
import com.xray.act.jfinal.JfModel;
import com.xray.act.util.SqlUtil;
import com.xray.act.util.StringUtil;
import com.xray.act.web.vo.PageVo;
import com.xray.taoke.admin.common.Constant;

@TableBind(configName = Constant.db_dataSource, tableName = "tk_mpinfo", pkName = "seqid")
public class TkMpinfo extends JfModel<TkMpinfo> {
    private static final long serialVersionUID = 1L;
    public static final TkMpinfo dao = new TkMpinfo();
    private String url1;

    public String getUrl1() {
        return url1;
    }

    public void setUrl1(String url1) {
        this.url1 = url1;
    }

    public String getName1() {
        try {
            return new String(get("name"), "UTF-8");
        } catch (Exception e) {
        }
        return null;
    }

    public TkMpinfo exists(String appid) {
        String sql = "select * from `tk_mpinfo` where `appid`=?";
        return dao.findFirst(sql, appid);
    }

    public List<TkMpinfo> queryByGoodid(String good_id) {
        String sql = "select * from `tk_mpinfo` where `good_id` =? ";
        return dao.find(sql, good_id);
    }

    public TkMpinfo isExist(String appid) {
        String sql = "SELECT t.table_name FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA ='ld_taoke' AND t.TABLE_NAME ='tk_mpuser_" + appid + "'";
        return dao.findFirst(sql);
    }

    public List<TkMpinfo> queryList(Map<String, Object> cond, PageVo page) {
        String sql = "select * from `tk_mpinfo` where 1=1 ";
        StringBuilder sb = new StringBuilder();
        sb.append(" and `state` >0");
        if (cond != null) {
            if (!StringUtil.isEmpty(cond.get("word"))) {
                sb.append(" and  (`appid` like  '%").append(cond.get("word")).append("%'").append(" or `name` like '%").append(cond.get("word")).append("%') ");
            }
        }
        if (page != null) {
            String countSql = "select count(1) from `tk_mpinfo` where 1=1 " + sb.toString();
            int count = Db.queryLong(countSql).intValue();
            page.setCount(count);
            if (count <= 0) {
                return new ArrayList<TkMpinfo>();
            }
            sb.append(page.orderbySql());
            sb.append(page.limitSql());
        }
        return dao.find(sql + sb.toString());
    }

    public List<TkMpinfo> queryAllInuse() {
        String sql = "select * from `tk_mpinfo` where `state`=1 order by `seqid` desc";
        return TkMpinfo.dao.find(sql);
    }
    
    public List<TkMpinfo> queryTbnameInuse() {
        String sql = "select `appid`,`tbname` from `tk_mpinfo` where `state`=1 order by `seqid` desc";
        return TkMpinfo.dao.find(sql);
    }

    public List<String> queryAppidInuse() {
        String sql = "select `appid` from `tk_mpinfo` where `state`=1 order by `seqid` desc";
        return Db.use(Constant.db_dataSource).query(sql);
    }

    public void createUserByAppid(String appid) {
        StringBuffer sb = new StringBuffer();
        sb.append("CREATE TABLE `tk_mpuser_" + appid + "` (");
        sb.append("`seqid` bigint(20) NOT NULL AUTO_INCREMENT,");
        sb.append("`openid` varchar(60) NOT NULL DEFAULT '', ");
        sb.append("`userid` varchar(64) NOT NULL DEFAULT '',");
        sb.append("`name` tinyblob,");
        sb.append("`avatar` varchar(255) NOT NULL DEFAULT '' COMMENT '头像',");
        sb.append("`gender` tinyint(4) NOT NULL DEFAULT '0' COMMENT '性别:1男,2女',");
        sb.append("`kefuid` varchar(255) NOT NULL DEFAULT '',");
        sb.append("`followno` tinyint(4) NOT NULL DEFAULT '0',");
        sb.append("`infollow` tinyint(4) NOT NULL DEFAULT '1' COMMENT '状态:1正常,-1取关',");
        sb.append("`state` tinyint(4) NOT NULL DEFAULT '0' COMMENT '状态:0未初始化,1正常',");
        sb.append("`inputtime` bigint(20) NOT NULL DEFAULT '0',");
        sb.append("`edittime` bigint(20) NOT NULL DEFAULT '0',");
        sb.append(" PRIMARY KEY (`seqid`),");
        sb.append(" UNIQUE KEY `idx_openid` (`openid`)");
        sb.append(") ENGINE=InnoDB DEFAULT CHARSET=utf8");
        Db.update(sb.toString());
    }

    public List<TkMpinfo> queryByState(String appid, int state) {
        String sql = "select * from `tk_mpuser_" + appid + "` where `state`=?";
        return TkMpinfo.dao.find(sql, state);
    }

    public List<TkMpinfo> queryListByAppid(Map<String, Object> cond, PageVo page) {
        List<TkMpinfo> list = new ArrayList<>();
        String sql = "select * from `tk_mpuser_" + cond.get("appid") + "` where 1=1 ";
        StringBuilder sb = new StringBuilder();
        if (cond != null) {
        }
        if (page != null) {
            String countSql = "select count(1) from `tk_mpuser_" + cond.get("appid") + "` where 1=1" + sb.toString();
            int count = Db.queryLong(countSql).intValue();
            page.setCount(count);
            if (count <= 0) {
                return new ArrayList<TkMpinfo>();
            }
            sb.append(page.orderbySql());
            sb.append(page.limitSql());
        }
        try {
            return dao.find(sql + sb.toString());
        } catch (Exception e) {
            // TODO: handle exception
        }
        return list;
    }

    public void updateUserInfo(String appid, String openid, int gender, int state, String name, String avatar) {
        String sql = "update  `tk_mpuser_" + appid + "` SET `name`=?, `avatar`=?, `gender`=?, `state`=? where `openid`=?";
        Db.update(sql, name, avatar, gender, state, openid);
    }

    public List<TkMpinfo> queryByIds(List<String> idList) {
        String sql = "select  *  from  `tk_mpinfo`  WHERE `seqid` IN (" + SqlUtil.join(idList) + ")";
        return dao.find(sql);
    }

    public TkMpinfo queryByUserid(String appid, String userid) {
        String sql = "select  *  from  `tk_mpuser_" + appid + "`  WHERE `userid` = '" + userid + "'";
        return dao.findFirst(sql);
    }

}
