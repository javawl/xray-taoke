package com.xray.taoke.act.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.jfinal.ext.plugin.tablebind.TableBind;
import com.jfinal.plugin.activerecord.Db;
import com.xray.act.jfinal.JfModel;
import com.xray.act.util.StringUtil;
import com.xray.act.web.vo.PageVo;
import com.xray.taoke.act.common.Constant;

@TableBind(configName = Constant.db_dataSource, tableName = "tk_tbgoods", pkName = "seqid")
public class TbGoods extends JfModel<TbGoods> {
    private static final long serialVersionUID = 1L;
    public static final TbGoods dao = new TbGoods();

    public TbGoods queryByItemid(String itemid) {
        String sql = "select * from `tk_tbgoods` where `itemid`=?";
        return TbGoods.dao.findFirst(sql, itemid);
    }

    public List<TbGoods> queryList(Map<String, Object> cond, PageVo page) {
        String sql = "select * from `tk_tbgoods` where 1=1 ";
        StringBuilder sb = new StringBuilder();
        if (cond != null) {
            if (StringUtil.isNotEmpty(cond.get("link_id"))) {
                sb.append(" and  seqid IN(SELECT goods_id FROM `tk_link_goods` WHERE link_id = '" + cond.get("link_id") + "') ");
            }
        }
        if (page != null) {
            String countSql = "select count(1) from `tk_tbgoods` where 1=1 " + sb.toString();
            int count = Db.queryLong(countSql).intValue();
            page.setCount(count);
            if (count <= 0) {
                return new ArrayList<TbGoods>();
            }
            sb.append(page.orderbySql());
            sb.append(page.limitSql());
        }

        return dao.find(sql + sb.toString());
    }

    public void updateOrderno() {
        String sql = "update `tk_tbgoods` set `orderno`=`orderno`+100";
        Db.update(sql);
    }

    public void updateIfNotExist(double tkrates, double tkmoney, int type, String itemid, String activityid, String itempic, String itemdesc, String itemtitle, String good_url, String couponurl, String itemshorttitle, double itemprice, String shopname, long start_time, long end_time, double end_price, int orderno, int couponnum) {
        String sql = " INSERT INTO  `tk_tbgoods` (`tkrates`,`tkmoney`,`sale_type`,`itemid`,`activityid`,`itempic`,`itemdesc`,`itemtitle`,`good_url`,`couponurl`,`itemshorttitle`,`itemprice`,`shopname`,`orderno`,`inputtime`,`start_time`,`end_time`,`itemendprice`,`couponnum`) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)  ON DUPLICATE KEY UPDATE  `itemid`=? , `activityid` =?";
        Db.update(sql, tkrates, tkmoney, type, itemid, activityid, itempic, itemdesc, itemtitle, good_url, couponurl, itemshorttitle, itemprice, shopname, orderno, System.currentTimeMillis(), start_time, end_time, end_price, couponnum, itemid, activityid);
    }

    public void updateState(String itemid, String activityid, int down_type, long endtime) {
        String sql = " INSERT INTO  `tk_tbgoods` (`itemid`,`activityid`,`end_time`,`down_type`) VALUES(?,?,?,?)  ON DUPLICATE KEY UPDATE  `itemid`=? , `activityid` =?";
        Db.update(sql, itemid, activityid, endtime, down_type, itemid, activityid);
    }

    public String getShowtitle() {
        String title = getStr("itemshorttitle");
        return StringUtil.isNotEmpty(title) ? title : getStr("itemtitle");
    }

}
