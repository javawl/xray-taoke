package com.xray.taoke.act.web.controller;

import java.util.Map;

import com.jfinal.ext.route.ControllerBind;
import com.jfinal.weixin.sdk.api.SnsAccessToken;
import com.jfinal.weixin.sdk.api.SnsAccessTokenApi;
import com.xray.act.jfinal.JfController;
import com.xray.act.util.StringUtil;
import com.xray.act.util.UuidUtil;
import com.xray.act.web.vo.RtnFactory;
import com.xray.taoke.act.common.Constant;
import com.xray.taoke.act.model.MpUser;
import com.xray.taoke.act.model.UoUser;
import com.xray.taoke.act.service.AiService;

@ControllerBind(controllerKey = "/auth")
public class AuthController extends JfController {

    public void index() {
        renderError(403);
    }

    public void goBind() {
        String aid = getPara("aid");
        if (AiService.instance.titemClickVal(aid)) {
            redirect(AiService.instance.titemUrlVal(aid));
            return;
        }
        setAttr("url", Constant.getAuthorizeURL(aid));
        render("/html/auth.html");
    }

    public void doBind() {
        String code = getPara("code");
        String aid = getPara("state");

        Map<String, String> map = AiService.instance.titemMapVal(aid);
        if (map == null || map.size() <= 0) {
            renderRtn(RtnFactory.fail);
            return;
        }
        String appid = map.get("appid");
        String openid = map.get("openid");
        String itemid = map.get("itemid");
        
        String userid = MpUser.dao.queryUseridByOpenid(appid, openid);
        if (StringUtil.isEmpty(userid)) {
            // 绑定
            SnsAccessToken data = SnsAccessTokenApi.getSnsAccessToken(Constant.wxsns_appid, Constant.wxsns_appsecret, code);
            String uopenid = data.getOpenid();
            userid = UoUser.dao.queryUseridByOpenid(uopenid);
            if (StringUtil.isEmpty(userid)) {
                userid = UuidUtil.getUuidByJdk(true);
            }
            MpUser.dao.updateUseridByOpenid(appid, openid, userid);
        }
        
        redirect(AiService.instance.genTitemUrl(itemid));
    }

    public void doInvite() {
        String code = getPara("code");
        String state = getPara("state");
        if (StringUtil.isEmpty(state) || !state.contains("_")) {
            logger.error("err state:{}", state);
            renderRtn(RtnFactory.fail);
            return;
        }

        String[] arr = state.split("_");
        String invite = arr[0];
        String goid = arr[1];

        // 获取userid
        SnsAccessToken data = SnsAccessTokenApi.getSnsAccessToken(Constant.wxsns_appid, Constant.wxsns_appsecret, code);
        String uo_openid = data.getOpenid();
        String userid = UoUser.dao.queryUseridByOpenid(uo_openid);

        if (StringUtil.isNotEmpty(userid)) {
            UoUser.dao.updateInviteByUserid(userid, invite);
            logger.info("update invite,userid:{},invite:{}", userid, invite);
        } else {
            userid = UuidUtil.getUuidByJdk(true);
            UoUser.dao.addData(userid, uo_openid, invite);
            logger.info("add invite,userid:{},invite:{}", userid, invite);
        }
        redirect(goid);
    }


}
